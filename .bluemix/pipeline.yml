---
stages:
- name: EVA - Setup
  inputs:
  - service: ${EVA_REPO}
    type: git
    branch: master
    dir_name: null
  triggers:
  - type: commit
  properties:
  - name: DATABASE_TYPE
    value: ${DATABASE_TYPE}
    type: text
  - name: USERNAME
    value: ${USERNAME}
    type: text
  - name: PASSWORD
    value: ${PASSWORD}
    type: text
  - name: LANGUAGE
    value: de
    type: text
  - name: PROD_REGION_ID
    value: ${PROD_REGION_ID}
  - name: API_KEY
    value: ${API_KEY}
    type: secure
  - name: PROD_ORG_NAME
    value: ${PROD_ORG_NAME}
  - name: PROD_SPACE_NAME
    value: ${PROD_SPACE_NAME}
  - name: PROD_RESOURCE_GROUP_NAME
    value: ${PROD_RESOURCE_GROUP_NAME}
  - name: PROD_APP_NAME
    value: ${PROD_APP_NAME}
  jobs:
  - name: Setup
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      resource-group: ${PROD_RESOURCE_GROUP_NAME}
      api_key: ${API_KEY}
    script: |-
      #!/bin/bash

      cd scripts

      if [ -e setup.log ]
      then
        echo ""
        echo "########## SETUP ALREADY EXECUTED #########"
        echo ""
      else
        if [ "${DATABASE_TYPE}" = "Compose for MongoDB" ]
        then
          bash setup_mongodb.sh | tee -a setup.log
        else
          bash setup_cloudant.sh | tee -a setup.log
        fi

        git add ../backend/.env
        git add setup.log

        git config user.email "eva@pipeline.com"
        git config user.name "EVA Pipeline"
        git config push.default simple

        git commit -m "Setup completed! Log file and local .env file attached."
        git push
      fi
- name: Build Backend
  inputs:
  - service: ${EVA_REPO}
    type: git
    branch: master
    dir_name: null
  triggers:
  - type: stage
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash

      bash ./scripts/backend.sh
- name: Deploy Backend
  inputs:
  - type: job
    stage: Build Backend
    job: Build
    dir_name: null
  triggers:
  - type: stage
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      resource-group: ${PROD_RESOURCE_GROUP_NAME}
      application: ${PROD_APP_NAME}
      api_key: ${API_KEY}
    script: |-
      #!/bin/bash
      
      cf push ${CF_APP}-Backend --random-route

      # View logs
      # cf logs "${CF_APP}" --recent
- name: Build Frontend
  inputs:
  - service: ${EVA_REPO}
    type: git
    branch: master
    dir_name: null
  triggers:
  - type: stage
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash

      bash ./scripts/frontend.sh
- name: Deploy Frontend
  inputs:
  - type: job
    stage: Build Frontend
    job: Build
    dir_name: null
  triggers:
  - type: stage
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      resource-group: ${PROD_RESOURCE_GROUP_NAME}
      application: ${PROD_APP_NAME}
      api_key: ${API_KEY}
    script: |-
      #!/bin/bash

      cf push ${CF_APP}-Frontend --random-route

      # View logs
      # cf logs "${CF_APP}" --recent
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
