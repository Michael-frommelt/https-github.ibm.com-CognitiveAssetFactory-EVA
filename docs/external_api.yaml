swagger: '2.0'
info:
  x-ibm-name: eva-external
  title: EVA external
  version: 1.0.0
schemes:
  - https
  - wss
host: eva-backend-succinic-cavel.eu-de.mybluemix.net
basePath: /api/public
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: x-access-token
    description: Json Web Token (JWT) used to check authorization of the client. The client requests the token using the /authenticate method and has to add the returned token to subsequent calls to the other methods.
security:
  - JWT: []
x-ibm-configuration:
  testable: true
  enforced: false
  cors:
    enabled: true
  assembly:
    execute:
      - invoke:
          target-url: $(target-url)$(request.path)
  phase: realized
  properties:
    hostname:
      value: eva-backend-succinic-cavel.eu-de.mybluemix.net
      description: host name of the API endpoint
      encoded: false
  catalogs: {}
paths:
  /authenticate:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/auth-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
    parameters:
      - name: body
        required: true
        in: body
        schema:
          $ref: '#/definitions/authentication'
  /message:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/message-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
      parameters:
        - name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/message'
      description: ''
  /feedback:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/simple-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
      parameters:
        - name: feedback
          required: true
          in: body
          schema:
            $ref: '#/definitions/feedback'
  /conversation-feedback:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/simple-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
      parameters:
        - name: feedback
          required: true
          in: body
          schema:
            $ref: '#/definitions/conversation-feedback'
  /session/reset:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/simple-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
      parameters:
        - name: reset
          required: true
          in: body
          schema:
            $ref: '#/definitions/reset'
  /session/keepalive:
    post:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/simple-response'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/simple-response'
      parameters:
        - name: keepalive
          required: true
          in: body
          schema:
            $ref: '#/definitions/keepalive'
definitions:
  authentication:
    properties:
      app_id:
        type: string
        example: testapp
        description: id of the application
      secret:
        type: string
        example: testsecret
        description: secret password
    additionalProperties: false
    description: Authentication data
  auth-response:
    properties:
      success:
        type: boolean
        example: 'true'
      message:
        type: string
        example: authentication successful
      auth_token:
        type: string
        description: Authorization token for further requests
    additionalProperties: false
  message:
    properties:
      session_id:
        type: string
      client_id:
        type: string
      text:
        type: string
      user_name:
        type: string
    additionalProperties: false
    description: Type used by the /message method.
    required:
      - session_id
      - client_id
      - text
  message-response:
    properties:
      success:
        type: boolean
        description: Always true.
      message:
        type: string
        description: Original message text.
      text:
        type: string
        description: Answer text
      answer_proposals:
        type: array
        items:
          type: string
        description: Proposed answers which can be provided to the user as buttons.
        example: '[ "Ja", "Nein" ]'
      rated:
        type: boolean
        description: Feedback for the message was already provided automatically (i.e. Watson could not find an answer).
      message_id:
        type: integer
        format: int32
        description: 'Id identifying the message, can be used to provide feedback for the answer.'
    additionalProperties: false
    description: Response type of the message method.
    required:
      - success
      - message
      - text
      - answer_proposals
      - message_id
  feedback:
    properties:
      session_id:
        type: string
      client_id:
        type: string
      message_id:
        type: string
        description: id of the message the feedback is refering to
      comment:
        type: string
        example: '"Die Antwort ist falsch"'
        description: comment provided by the user
      feedback:
        type: string
        example: '"positive" or "negative"'
        description: 'Should be either "positive" or "negative". All other values are handled as "negative".'
    additionalProperties: false
    required:
      - session_id
      - client_id
      - message_id
      - feedback
  conversation-feedback:
    properties:
      session_id:
        type: string
      client_id:
        type: string
      comment:
        type: string
        example: '"Das war ein gutes Gespr√§ch"'
        description: comment provided by the user
      rating:
        type: int
        description: 'Star rating with range one to five'
      username:
        type: string
        description: 'an optional user name'
    additionalProperties: false
    required:
      - session_id
      - client_id
  keepalive:
    properties:
      session_id:
        type: string
    additionalProperties: false
    required:
      - session_id
  reset:
    properties:
      session_id:
        type: string
    additionalProperties: false
    required:
      - session_id
  simple-response:
    properties:
      success:
        type: boolean
      message:
        type: string
        description: optional status or error message
    additionalProperties: false
    required:
      - success
tags: []
